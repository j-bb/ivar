/* This file was generated by SableCC (http://www.sablecc.org/). */

package ivar.grammar.node;

import ivar.grammar.analysis.*;

@SuppressWarnings("nls")
public final class ADeleteCrudModifier extends PCrudModifier
{
    private TCrudDeleteKeyword _crudDeleteKeyword_;

    public ADeleteCrudModifier()
    {
        // Constructor
    }

    public ADeleteCrudModifier(
        @SuppressWarnings("hiding") TCrudDeleteKeyword _crudDeleteKeyword_)
    {
        // Constructor
        setCrudDeleteKeyword(_crudDeleteKeyword_);

    }

    @Override
    public Object clone()
    {
        return new ADeleteCrudModifier(
            cloneNode(this._crudDeleteKeyword_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADeleteCrudModifier(this);
    }

    public TCrudDeleteKeyword getCrudDeleteKeyword()
    {
        return this._crudDeleteKeyword_;
    }

    public void setCrudDeleteKeyword(TCrudDeleteKeyword node)
    {
        if(this._crudDeleteKeyword_ != null)
        {
            this._crudDeleteKeyword_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._crudDeleteKeyword_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._crudDeleteKeyword_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._crudDeleteKeyword_ == child)
        {
            this._crudDeleteKeyword_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._crudDeleteKeyword_ == oldChild)
        {
            setCrudDeleteKeyword((TCrudDeleteKeyword) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}

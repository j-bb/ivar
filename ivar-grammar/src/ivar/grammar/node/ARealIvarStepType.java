/* This file was generated by SableCC (http://www.sablecc.org/). */

package ivar.grammar.node;

import ivar.grammar.analysis.*;

@SuppressWarnings("nls")
public final class ARealIvarStepType extends PIvarStepType
{
    private TRealTypeKeyword _realTypeKeyword_;

    public ARealIvarStepType()
    {
        // Constructor
    }

    public ARealIvarStepType(
        @SuppressWarnings("hiding") TRealTypeKeyword _realTypeKeyword_)
    {
        // Constructor
        setRealTypeKeyword(_realTypeKeyword_);

    }

    @Override
    public Object clone()
    {
        return new ARealIvarStepType(
            cloneNode(this._realTypeKeyword_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseARealIvarStepType(this);
    }

    public TRealTypeKeyword getRealTypeKeyword()
    {
        return this._realTypeKeyword_;
    }

    public void setRealTypeKeyword(TRealTypeKeyword node)
    {
        if(this._realTypeKeyword_ != null)
        {
            this._realTypeKeyword_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._realTypeKeyword_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._realTypeKeyword_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._realTypeKeyword_ == child)
        {
            this._realTypeKeyword_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._realTypeKeyword_ == oldChild)
        {
            setRealTypeKeyword((TRealTypeKeyword) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}

/* This file was generated by SableCC (http://www.sablecc.org/). */

package ivar.grammar.node;

import ivar.grammar.analysis.*;

@SuppressWarnings("nls")
public final class ACompilationUnit extends PCompilationUnit
{
    private PImportDeclarations _importDeclarations_;
    private PApplicationDeclaration _applicationDeclaration_;
    private PScenarioDeclarations _scenarioDeclarations_;
    private PDatasetDeclarations _datasetDeclarations_;

    public ACompilationUnit()
    {
        // Constructor
    }

    public ACompilationUnit(
        @SuppressWarnings("hiding") PImportDeclarations _importDeclarations_,
        @SuppressWarnings("hiding") PApplicationDeclaration _applicationDeclaration_,
        @SuppressWarnings("hiding") PScenarioDeclarations _scenarioDeclarations_,
        @SuppressWarnings("hiding") PDatasetDeclarations _datasetDeclarations_)
    {
        // Constructor
        setImportDeclarations(_importDeclarations_);

        setApplicationDeclaration(_applicationDeclaration_);

        setScenarioDeclarations(_scenarioDeclarations_);

        setDatasetDeclarations(_datasetDeclarations_);

    }

    @Override
    public Object clone()
    {
        return new ACompilationUnit(
            cloneNode(this._importDeclarations_),
            cloneNode(this._applicationDeclaration_),
            cloneNode(this._scenarioDeclarations_),
            cloneNode(this._datasetDeclarations_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseACompilationUnit(this);
    }

    public PImportDeclarations getImportDeclarations()
    {
        return this._importDeclarations_;
    }

    public void setImportDeclarations(PImportDeclarations node)
    {
        if(this._importDeclarations_ != null)
        {
            this._importDeclarations_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._importDeclarations_ = node;
    }

    public PApplicationDeclaration getApplicationDeclaration()
    {
        return this._applicationDeclaration_;
    }

    public void setApplicationDeclaration(PApplicationDeclaration node)
    {
        if(this._applicationDeclaration_ != null)
        {
            this._applicationDeclaration_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._applicationDeclaration_ = node;
    }

    public PScenarioDeclarations getScenarioDeclarations()
    {
        return this._scenarioDeclarations_;
    }

    public void setScenarioDeclarations(PScenarioDeclarations node)
    {
        if(this._scenarioDeclarations_ != null)
        {
            this._scenarioDeclarations_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._scenarioDeclarations_ = node;
    }

    public PDatasetDeclarations getDatasetDeclarations()
    {
        return this._datasetDeclarations_;
    }

    public void setDatasetDeclarations(PDatasetDeclarations node)
    {
        if(this._datasetDeclarations_ != null)
        {
            this._datasetDeclarations_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._datasetDeclarations_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._importDeclarations_)
            + toString(this._applicationDeclaration_)
            + toString(this._scenarioDeclarations_)
            + toString(this._datasetDeclarations_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._importDeclarations_ == child)
        {
            this._importDeclarations_ = null;
            return;
        }

        if(this._applicationDeclaration_ == child)
        {
            this._applicationDeclaration_ = null;
            return;
        }

        if(this._scenarioDeclarations_ == child)
        {
            this._scenarioDeclarations_ = null;
            return;
        }

        if(this._datasetDeclarations_ == child)
        {
            this._datasetDeclarations_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._importDeclarations_ == oldChild)
        {
            setImportDeclarations((PImportDeclarations) newChild);
            return;
        }

        if(this._applicationDeclaration_ == oldChild)
        {
            setApplicationDeclaration((PApplicationDeclaration) newChild);
            return;
        }

        if(this._scenarioDeclarations_ == oldChild)
        {
            setScenarioDeclarations((PScenarioDeclarations) newChild);
            return;
        }

        if(this._datasetDeclarations_ == oldChild)
        {
            setDatasetDeclarations((PDatasetDeclarations) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}

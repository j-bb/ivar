/* This file was generated by SableCC (http://www.sablecc.org/). */

package ivar.grammar.node;

import ivar.grammar.analysis.*;

@SuppressWarnings("nls")
public final class AAllowRoleModifier extends PRoleModifier
{
    private TRoleModifierAllow _roleModifierAllow_;

    public AAllowRoleModifier()
    {
        // Constructor
    }

    public AAllowRoleModifier(
        @SuppressWarnings("hiding") TRoleModifierAllow _roleModifierAllow_)
    {
        // Constructor
        setRoleModifierAllow(_roleModifierAllow_);

    }

    @Override
    public Object clone()
    {
        return new AAllowRoleModifier(
            cloneNode(this._roleModifierAllow_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAllowRoleModifier(this);
    }

    public TRoleModifierAllow getRoleModifierAllow()
    {
        return this._roleModifierAllow_;
    }

    public void setRoleModifierAllow(TRoleModifierAllow node)
    {
        if(this._roleModifierAllow_ != null)
        {
            this._roleModifierAllow_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._roleModifierAllow_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._roleModifierAllow_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._roleModifierAllow_ == child)
        {
            this._roleModifierAllow_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._roleModifierAllow_ == oldChild)
        {
            setRoleModifierAllow((TRoleModifierAllow) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}

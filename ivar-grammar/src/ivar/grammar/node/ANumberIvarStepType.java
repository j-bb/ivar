/* This file was generated by SableCC (http://www.sablecc.org/). */

package ivar.grammar.node;

import ivar.grammar.analysis.*;

@SuppressWarnings("nls")
public final class ANumberIvarStepType extends PIvarStepType
{
    private TNumberTypeKeyword _numberTypeKeyword_;

    public ANumberIvarStepType()
    {
        // Constructor
    }

    public ANumberIvarStepType(
        @SuppressWarnings("hiding") TNumberTypeKeyword _numberTypeKeyword_)
    {
        // Constructor
        setNumberTypeKeyword(_numberTypeKeyword_);

    }

    @Override
    public Object clone()
    {
        return new ANumberIvarStepType(
            cloneNode(this._numberTypeKeyword_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseANumberIvarStepType(this);
    }

    public TNumberTypeKeyword getNumberTypeKeyword()
    {
        return this._numberTypeKeyword_;
    }

    public void setNumberTypeKeyword(TNumberTypeKeyword node)
    {
        if(this._numberTypeKeyword_ != null)
        {
            this._numberTypeKeyword_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._numberTypeKeyword_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._numberTypeKeyword_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._numberTypeKeyword_ == child)
        {
            this._numberTypeKeyword_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._numberTypeKeyword_ == oldChild)
        {
            setNumberTypeKeyword((TNumberTypeKeyword) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}

annotation.processing.enabled=true
annotation.processing.enabled.in.editor=false
annotation.processing.processors.list=
annotation.processing.run.all.processors=true
annotation.processing.source.output=${build.generated.sources.dir}/ap-source-output
application.title=ivar-example-caveavin
application.vendor=jbb
build.classes.dir=${build.dir}/classes
build.classes.excludes=**/*.java,**/*.form
# This directory is removed when the project is cleaned:
build.dir=build
build.generated.dir=${build.dir}/generated
build.generated.sources.dir=${build.dir}/generated-sources
# Only compile against the classpath explicitly listed here:
build.sysclasspath=ignore
build.test.classes.dir=${build.dir}/test/classes
build.test.results.dir=${build.dir}/test/results
# Uncomment to specify the preferred debugger connection transport:
#debug.transport=dt_socket
debug.classpath=\
    ${run.classpath}
debug.modulepath=\
    ${run.modulepath}
debug.test.classpath=\
    ${run.test.classpath}
debug.test.modulepath=\
    ${run.test.modulepath}
# Files in build.classes.dir which should be excluded from distribution jar
dist.archive.excludes=
# This directory is removed when the project is cleaned:
dist.dir=dist
dist.jar=${dist.dir}/ivar-example-caveavin.jar
dist.javadoc.dir=${dist.dir}/javadoc
dist.jlink.dir=${dist.dir}/jlink
dist.jlink.output=${dist.jlink.dir}/ivar-example-caveavin
endorsed.classpath=
excludes=
includes=**
jar.compress=false
javac.classpath=\
    ${reference.common.jar}:\
    ${reference.helper.jar}:\
    ${reference.jfwk.jar}:\
    ${reference.lib-rt-json.jar}:\
    ${reference.lib-rt-rpc.jar}:\
    ${reference.lib-rt-serialization.jar}:\
    ${libs.openJPA.classpath}:\
    ${libs.commons.classpath}:\
    ${reference.ivar-compiler.jar}
# Space-separated list of extra javac options
javac.compilerargs=
javac.deprecation=false
javac.external.vm=true
javac.modulepath=
javac.processormodulepath=
javac.processorpath=\
    ${javac.classpath}
javac.source=11
javac.target=11
javac.test.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
javac.test.modulepath=\
    ${javac.modulepath}
javac.test.processorpath=\
    ${javac.test.classpath}
javadoc.additionalparam=
javadoc.author=false
javadoc.encoding=${source.encoding}
javadoc.html5=false
javadoc.noindex=false
javadoc.nonavbar=false
javadoc.notree=false
javadoc.private=false
javadoc.splitindex=true
javadoc.use=true
javadoc.version=false
javadoc.windowtitle=
# The jlink additional root modules to resolve
jlink.additionalmodules=
# The jlink additional command line parameters
jlink.additionalparam=
jlink.launcher=true
jlink.launcher.name=ivar-example-caveavin
meta.inf.dir=${src.dir}/META-INF
mkdist.disabled=true
platform.active=default_platform
project.common=../common
project.helper=../helper
project.ivar-compiler=../ivar-compiler
project.ivar-grammar=../ivar-grammar
project.ivar-metamodel=../ivar-metamodel
project.jfwk=../jfwk
project.lib-rt-json=../lib-rt-json
project.lib-rt-rpc=../lib-rt-rpc
project.lib-rt-serialization=../lib-rt-serialization
project.license=apache20
reference.common.jar=${project.common}/dist/common.jar
reference.helper.jar=${project.helper}/dist/helper.jar
reference.ivar-compiler.jar=${project.ivar-compiler}/dist/ivar-compiler.jar
reference.ivar-grammar.jar=${project.ivar-grammar}/dist/ivar-grammar.jar
reference.ivar-metamodel.jar=${project.ivar-metamodel}/dist/ivar-metamodel.jar
reference.jfwk.jar=${project.jfwk}/dist/jfwk.jar
reference.lib-rt-json.jar=${project.lib-rt-json}/dist/lib-rt-json.jar
reference.lib-rt-rpc.jar=${project.lib-rt-rpc}/dist/lib-rt-rpc.jar
reference.lib-rt-serialization.jar=${project.lib-rt-serialization}/dist/lib-rt-serialization.jar
run.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}:\
    ${reference.helper.jar}:\
    ${reference.ivar-compiler.jar}:\
    ${reference.ivar-grammar.jar}:\
    ${reference.ivar-metamodel.jar}:\
    ${reference.jfwk.jar}:\
    ${libs.sableCC.classpath}:\
    ${libs.args4j.classpath}:\
    ${libs.commons.classpath}:\
    ${libs.velocity.classpath}
# Space-separated list of JVM arguments used when running the project.
# You may also define separate properties like run-sys-prop.name=value instead of -Dname=value.
# To set system properties for unit tests define test-sys-prop.name=value:
run.jvmargs=
run.modulepath=\
    ${javac.modulepath}
run.test.classpath=\
    ${javac.test.classpath}:\
    ${build.test.classes.dir}
run.test.modulepath=\
    ${javac.test.modulepath}
source.encoding=UTF-8
src.dir=src
test.src.dir=test
